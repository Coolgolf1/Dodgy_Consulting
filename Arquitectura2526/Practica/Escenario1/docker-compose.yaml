services:
  ray-head:
    image: ${RAY_IMAGE}
    container_name: ray-head
    ports:
      - "${REDISPORT}:${REDISPORT}"           # Puerto Redis
      - "${DASHBOARDPORT}:${DASHBOARDPORT}"   # Puerto dashboard Ray
      - "${HEADNODEPORT}:${HEADNODEPORT}"     # Puerto para head node
    env_file:
      - .env
    command: >
      bash -c "ray start --head --num-cpus=0 --port=${REDISPORT} --dashboard-port=${DASHBOARDPORT} --dashboard-host=0.0.0.0 --redis-password=${REDISPASSWORD} --block"
      # --num-cpus=0 para que el head no reserve CPUs para tareas
    shm_size: 2g
    cpuset: "1"                              # Asigna CPU 1 al head (solo coordinación)
    networks:
      - ray_net

  ray-worker-1:
    image: ${RAY_IMAGE}
    container_name: ray-worker-1
    env_file:
      - .env
    command: >
      bash -c "ray start --address=ray-head:${REDISPORT} --redis-password=${REDISPASSWORD} --num-cpus=1 --block"
    shm_size: 2g
    cpuset: "0"                             # Asigna CPU 0 al worker 1 (para computación)
    networks:
      - ray_net


networks:
  ray_net:
    driver: bridge
